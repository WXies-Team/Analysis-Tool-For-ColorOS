name: Change Log

on:
  push:
    tags:
      - 'v*'

jobs:
  changelog:
    if: ${{ !contains(github.ref, 'beta') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate
        run: |
          tags=($(git tag --merged $(git rev-parse HEAD) --sort=-creatordate))
          preTag=$(grep -oP '^## \K.*' CHANGELOG.md | head -n 1)
          currentTag=""
          for ((i = 0; i <= ${#tags[@]}; i++)); do
            if (( i < ${#tags[@]} )); then
              tag=${tags[$i]}
            else
              tag=""
            fi
            if [ -n "$currentTag" ]; then
              if [ "$(echo -e "$currentTag\n$preTag" | sort -V | head -n 1)" == "$currentTag" ]; then
                break
              fi
            fi
            if [ -n "$currentTag" ]; then
              echo "## $currentTag" >> NEW_CHANGELOG.md
              echo "" >> NEW_CHANGELOG.md
              if [ -n "$tag" ]; then
                git log --pretty=format:"%B" "$tag..$currentTag" | awk 'NF {print "- " $0} !NF {print ""}' >> NEW_CHANGELOG.md
              else
                git log --pretty=format:"%B" "$currentTag" | awk 'NF {print "- " $0} !NF {print ""}' >> NEW_CHANGELOG.md
              fi
              echo "" >> NEW_CHANGELOG.md
            fi
            currentTag=$tag
          done
          cat CHANGELOG.md >> NEW_CHANGELOG.md
          cat NEW_CHANGELOG.md > CHANGELOG.md

      - name: Commit
        run: |
          git add CHANGELOG.md
          if ! git diff --cached --quiet; then
            echo "Commit pushing"
            git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
            git config --global user.name "${GITHUB_ACTOR}"
            git commit -m "release: ${currentTag}"
            git push
            if [ $? -eq 0 ]; then
              echo "Push succeeded"
            else
              echo "Push failed"
              exit 1
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
